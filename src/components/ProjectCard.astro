---
export interface Props {
	title: string,
	description: string,
	subtitle: {
		href: string,
		text: string
	},
	imageLink: URL
}

const {
	title = 'Feel Good',
	description = 'A collection of joyful queer stories from ten of the best writers of our time.',
	subtitle,
	imageLink = null
} = Astro.props

---

<div class="project">
	<div class={`project-cover ${imageLink===null ? '-default-cover' : '' }`}>
		<a href={subtitle?.href} target="_blank" rel="noopener noreferrer">
			{imageLink && (
			<img src={imageLink} alt={`${title} cover image`} />
			)}
		</a>
	</div>
	<div class="project-text">
		<div class="body">
			<h2>{subtitle?.href ?
				(<a href={subtitle?.href} target="_blank" rel="noopener noreferrer">{title}</a>) :
				({title})}<span class="icon">↗️</span></h2>
			<p>{ description }</p>
		</div>
		<div class="footer">
			<a href={ subtitle?.href || '#' } class="c-link c-link--out" target="_blank">{ subtitle.text }</a>
		</div>
	</div>
</div>

<style lang="scss">
	@import "../styles/mixins.scss";

	.project {
		display: grid;
		gap: 24px;
		text-decoration: none;
		grid-template-columns: 1fr minmax(auto, 320px);

		@include screen('small') {
			grid-template-columns: 1fr;
		}

		&:hover {
			.project-cover::before {
				--origin: -0.5px;
				content: "";
				z-index: var(--z-index--1);
				border: 3px solid var(--color-black);
				position: absolute;
				left: var(--origin);
				top: var(--origin);
				bottom: var(--origin);
				right: var(--origin);
			}
		}

		&-cover {
			position: relative;
			width: 100%;
			min-width: 300px;
			height: 100%;
			aspect-ratio: 616 / 400;
			overflow: hidden;
			display: flex;

			>a {
				display: block;
				width: 100%;
				height: 100%;

				>img {
					width: 100%;
					height: 100%;
					object-fit: cover;
				}
			}

			img {
				transform: scale(1.04);
				transition: 1.6s cubic-bezier(.16, 1, .3, 1);
			}



			@include screen('small') {
				min-width: unset;
				max-width: 100%;
			}

			&.-default-cover {
				background-color: #CD2D59;
				background: linear-gradient(0, #CD2D59 0, #D4532F 50%, #CD2D59 100%);
			}
		}

		&-text {
			display: flex;
			flex-direction: column;
			justify-content: space-between;
			gap: 32px;

			h2,
			h5 {
				display: inline-flex;

				.icon {
					display: none;
					font-size: inherit;
				}

				a {
					font-style: normal;
				}
			}

			h5 {
				font-size: 3.2rem;
				font-weight: normal;
			}

			p {
				font-size: var(--font-size-base);
			}

			.footer {
				font-style: italic;
				padding-block-end: 28px;
				margin-block-end: 0;
				position: relative;

				&:hover {
					&::after {
						animation: animatedBackground .35s linear infinite both;
					}
				}

				&::after {
					--divider-height: 16px;
					content: '';
					position: absolute;
					bottom: 0;
					left: 0;
					right: 0;
					height: var(--divider-height);
					background: linear-gradient(90deg, var(--color-light-gray) 50%, transparent 50%, transparent 100%),
						linear-gradient(90deg, transparent 50%, var(--color-light-gray) 50%, var(--color-light-gray) 100%);
					background-position: 0 0, 0 calc(var(--divider-height) / 2);
					background-size: var(--divider-height) 50%;
					background-repeat: repeat no-repeat;
					// animation: none;
					transition: background-size .35s linear;

					@keyframes animatedBackground {

						to {
							background-position: 32px 0, 32px calc(var(--divider-height) / 2);
						}
					}
				}

				p {
					position: relative;
					margin-bottom: 0;
				}
			}
		}
	}
</style>